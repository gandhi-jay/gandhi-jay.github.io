<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Jay Gandhi</title><link>https://www.gandhijay.com/</link><description>Recent content on Jay Gandhi</description><generator>Hugo -- 0.139.3</generator><language>en</language><lastBuildDate>Thu, 10 Oct 2024 02:39:21 +0530</lastBuildDate><atom:link href="https://www.gandhijay.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Flow of Control (Control Flow)</title><link>https://www.gandhijay.com/posts/control-flow/</link><pubDate>Thu, 10 Oct 2024 02:39:21 +0530</pubDate><guid>https://www.gandhijay.com/posts/control-flow/</guid><description>&lt;h4 id="flow-of-control-control-flow">Flow of control (control flow)&lt;/h4>
&lt;p>Flow of control is an order which instructions, statements and function calls are executed/evavluted in imparative program. Flow of control might be &lt;em>sequential&lt;/em> i.e. executing the statements one by one (smooth control flow), &lt;em>conditional&lt;/em> where program executes specific blocks based on condition (e.g. &lt;code>jne&lt;/code> in asm, &lt;code>if/else&lt;/code> in most programming languages), repetative/loops like &lt;code>for&lt;/code>, function calls and exceptional handling where program tries to recover from error or exceptions e.g. &lt;code>try/catch/finally&lt;/code> block. There can be combination of two as well like using &lt;code>while&lt;/code> or using &lt;code>break | continue | goto&lt;/code> in a loops.&lt;/p></description></item><item><title>Log in Apache Kafka</title><link>https://www.gandhijay.com/posts/apache-kafka-series-part-one/</link><pubDate>Fri, 07 Jul 2023 02:39:21 +0530</pubDate><guid>https://www.gandhijay.com/posts/apache-kafka-series-part-one/</guid><description>This is first part of the series on Apache Kafka, a well known distributed messaging system. We will explore the log data structure, why it is important. It&amp;#39;s not just about logging.</description></item><item><title>Notes on Write Amplification versus Read Perspiration</title><link>https://www.gandhijay.com/posts/write-amplification-versus-read-perspiration/</link><pubDate>Fri, 08 Jul 2022 02:39:21 +0530</pubDate><guid>https://www.gandhijay.com/posts/write-amplification-versus-read-perspiration/</guid><description>Notes on ACM artilcle &amp;#39;Write Amplification versus Read Perspiration&amp;#39; by Pat Helland</description></item><item><title>Bookshelf</title><link>https://www.gandhijay.com/bookshelf/</link><pubDate>Fri, 01 Jul 2022 02:39:21 +0530</pubDate><guid>https://www.gandhijay.com/bookshelf/</guid><description>List of books I recommand to have</description></item><item><title>Jay Gandhi</title><link>https://www.gandhijay.com/about/</link><pubDate>Fri, 01 Jul 2022 02:39:21 +0530</pubDate><guid>https://www.gandhijay.com/about/</guid><description>Senior Software Engineer at ServiceNow</description></item></channel></rss>