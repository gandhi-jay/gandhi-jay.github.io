<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Process Control on Jay Gandhi</title><link>https://www.gandhijay.com/tags/process-control/</link><description>Recent content in Process Control on Jay Gandhi</description><generator>Hugo -- 0.150.0</generator><language>en</language><lastBuildDate>Thu, 10 Oct 2024 02:39:21 +0530</lastBuildDate><atom:link href="https://www.gandhijay.com/tags/process-control/index.xml" rel="self" type="application/rss+xml"/><item><title>Flow of Control (Control Flow)</title><link>https://www.gandhijay.com/posts/control-flow/</link><pubDate>Thu, 10 Oct 2024 02:39:21 +0530</pubDate><guid>https://www.gandhijay.com/posts/control-flow/</guid><description>&lt;h2 id="flow-of-control-control-flow"&gt;&lt;strong&gt;Flow of Control (Control Flow)&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Control flow refers to the order in which instructions, statements, and function calls are executed in an imperative program. It determines how the program progresses based on different structures.&lt;/p&gt;
&lt;h3 id="types-of-control-flow"&gt;&lt;strong&gt;Types of Control Flow&lt;/strong&gt;&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Sequential Execution&lt;/strong&gt; – The program executes statements one by one in order.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Conditional Execution&lt;/strong&gt; – The program decides which block of code to execute based on a condition (e.g., &lt;code&gt;if/else&lt;/code&gt; in most languages, &lt;code&gt;jne&lt;/code&gt; in assembly).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Loops (Repetition)&lt;/strong&gt; – The program repeatedly executes a block of code (&lt;code&gt;for&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, &lt;code&gt;do-while&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Function Calls&lt;/strong&gt; – Control is transferred to a function and returns when it completes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Exception Handling&lt;/strong&gt; – The program attempts to handle errors using structures like &lt;code&gt;try/catch/finally&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Some control flow structures can be combined, such as using &lt;code&gt;while&lt;/code&gt; with &lt;code&gt;break&lt;/code&gt;, &lt;code&gt;continue&lt;/code&gt;, or &lt;code&gt;goto&lt;/code&gt; for finer control.&lt;/p&gt;</description></item></channel></rss>